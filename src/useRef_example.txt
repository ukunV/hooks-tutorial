컴포넌트 로컬 변수를 사용해야 할 때도 useRef를 활용할 수 있다.
로컬 변수란 렌더링과 상관없이 바뀔 수 있는 값을 의미한다.
클래스 형태로 작성된 컴포넌트의 경우에는 로컬 변수를 사용해야 할 때 다음과 같이 작성할 수 있다.



import React, { Component } from "react";

class MyComponent extends Component {
  id = 1;

  setid = (n) => {
    this.id = n;
  };

  printId = () => {
    console.log(this.id);
  };

  render() {
    return <div>MyComponent</div>;
  }
}

export default MyComponent;



이러한 코드를 함수형 컴포넌트로 작성한 것이다.



import React, { useRef } from "react";

const RefSample = () => {
  const id = useRef(1);

  const setId = (n) => {
    id.current = n;
  };

  const printId = () => {
    console.log(id.current);
  };

  return <div>refSample</div>;
};

export default RefSample;



이렇게 ref 안의 값이 바뀌어도 컴포넌트가 렌더링되지 않는다는 점에는 주의해야 한다.
렌더링과 관련되지 않은 값을 관리할 때만 이러한 방식으로 코드를 작성한다.